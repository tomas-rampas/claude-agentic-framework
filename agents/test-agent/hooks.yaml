# Test Agent Hook Mappings
# Defines integration points for testing and validation

version: "1.0"
agent: test-agent

hooks:
  testing-strategy:
    description: "Defines overall testing approach"
    trigger: "on_test_planning"
    priority: 1
    actions:
      - name: select_methodology
        description: "Choose testing approach"
        required: true
      - name: define_priorities
        description: "Set test priorities"
        required: true
      - name: allocate_resources
        description: "Plan resource usage"
        required: true
      - name: schedule_execution
        description: "Create test schedule"
        required: false
    strategies:
      - test_pyramid
      - risk_based
      - exploratory
      - regression_focused
      - continuous
      
  test-types:
    description: "Manages different test categories"
    trigger: "on_test_execution"
    priority: 1
    actions:
      - name: run_unit_tests
        description: "Execute unit tests"
        required: true
        mcp_server: "filesystem"
      - name: run_integration_tests
        description: "Execute integration tests"
        required: true
      - name: run_e2e_tests
        description: "Execute end-to-end tests"
        required: false
      - name: run_performance_tests
        description: "Execute performance tests"
        required: false
      - name: run_security_tests
        description: "Execute security tests"
        required: false
    categories:
      unit:
        parallel: true
        timeout: 5000
      integration:
        parallel: false
        timeout: 30000
      e2e:
        parallel: false
        timeout: 60000
      performance:
        parallel: false
        timeout: 120000
        
  quality-gates:
    description: "Enforces quality standards"
    trigger: "on_test_completion"
    priority: 1
    actions:
      - name: check_pass_rate
        description: "Verify test pass percentage"
        required: true
      - name: check_coverage
        description: "Verify code coverage"
        required: true
        mcp_server: "serena"
      - name: check_performance
        description: "Verify performance metrics"
        required: false
      - name: check_security
        description: "Verify security requirements"
        required: false
    thresholds:
      pass_rate: 0.95
      coverage: 0.8
      performance_degradation: 0.1
      critical_failures: 0
      
  failure-analysis:
    description: "Analyzes test failures"
    trigger: "on_test_failure"
    priority: 2
    actions:
      - name: categorize_failure
        description: "Classify failure type"
        required: true
      - name: extract_stack_trace
        description: "Get error details"
        required: true
      - name: identify_root_cause
        description: "Find failure source"
        required: true
        mcp_server: "serena"
      - name: detect_flaky_tests
        description: "Identify unstable tests"
        required: false
      - name: suggest_fixes
        description: "Recommend solutions"
        required: false
    failure_types:
      - assertion_failure
      - timeout
      - setup_error
      - teardown_error
      - network_error
      - resource_error
      
  coverage-standards:
    description: "Manages code coverage requirements"
    trigger: "on_coverage_analysis"
    priority: 2
    actions:
      - name: calculate_metrics
        description: "Compute coverage percentages"
        required: true
        mcp_server: "serena"
      - name: identify_gaps
        description: "Find uncovered code"
        required: true
        mcp_server: "serena"
      - name: prioritize_gaps
        description: "Rank by importance"
        required: true
      - name: generate_report
        description: "Create coverage report"
        required: true
        mcp_server: "filesystem"
    metrics:
      - line_coverage
      - branch_coverage
      - function_coverage
      - statement_coverage
      - complexity_coverage
      
  test-patterns:
    description: "Enforces testing best practices"
    trigger: "on_test_creation"
    priority: 3
    actions:
      - name: validate_structure
        description: "Check test organization"
        required: true
      - name: check_assertions
        description: "Verify proper assertions"
        required: true
      - name: review_mocking
        description: "Validate mock usage"
        required: false
      - name: check_isolation
        description: "Ensure test independence"
        required: true
    patterns:
      - arrange_act_assert
      - given_when_then
      - test_data_builders
      - object_mother
      - test_fixtures
      
# Integration points with other agents
integrations:
  maker-agent:
    - trigger: "after_code_change"
      action: "run_affected_tests"
      
  security-agent:
    - trigger: "on_security_finding"
      action: "create_security_test"
      
  debug-agent:
    - trigger: "on_test_failure"
      action: "debug_failure"
      
  plan-agent:
    - trigger: "on_planning"
      action: "estimate_test_effort"
      
  docs-agent:
    - trigger: "on_test_completion"
      action: "generate_test_report"
      
  reader-agent:
    - trigger: "before_test_run"
      action: "discover_test_files"
      
# Test execution configuration
execution:
  parallel_settings:
    max_workers: 10
    isolation_mode: "process"
    shared_resources: false
    
  retry_configuration:
    max_retries: 3
    backoff_ms: 1000
    exponential_backoff: true
    
  timeout_configuration:
    global_timeout: 300000
    test_timeout: 30000
    setup_timeout: 10000
    teardown_timeout: 5000
    
# Reporting configuration
reporting:
  formats:
    console:
      enabled: true
      verbosity: "normal"
      colors: true
      
    json:
      enabled: true
      indent: 2
      include_raw: false
      
    html:
      enabled: true
      template: "default"
      include_charts: true
      
    junit:
      enabled: true
      include_properties: true
      include_system_out: true
      
# Quality gates
quality_gates:
  blocking_conditions:
    - check: "smoke_tests_pass"
      threshold: 1.0
    - check: "critical_tests_pass"
      threshold: 1.0
    - check: "coverage_maintained"
      threshold: 0.0  # No decrease
      
  warning_conditions:
    - check: "all_tests_pass"
      threshold: 0.95
    - check: "performance_maintained"
      threshold: 0.9
      
# Performance tracking
performance:
  metrics_tracked:
    - execution_time
    - memory_usage
    - cpu_usage
    - test_duration
    
  baseline_comparison:
    enabled: true
    threshold: 0.1
    window: 10  # Last 10 runs