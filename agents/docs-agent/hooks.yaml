# Docs Agent Hook Mappings
# Defines integration points for documentation generation

version: "1.0"
agent: docs-agent

hooks:
  documentation-types:
    description: "Manages different documentation categories"
    trigger: "on_doc_request"
    priority: 1
    actions:
      - name: identify_type
        description: "Determine documentation type"
        required: true
      - name: select_template
        description: "Choose appropriate template"
        required: true
      - name: gather_content
        description: "Collect information"
        required: true
        mcp_server: "filesystem"
      - name: generate_document
        description: "Create documentation"
        required: true
    types:
      - readme
      - api_reference
      - user_guide
      - developer_guide
      - architecture_doc
      - deployment_guide
      - troubleshooting
      
  readme-template:
    description: "README file generation"
    trigger: "on_readme_generation"
    priority: 1
    actions:
      - name: analyze_project
        description: "Understand project structure"
        required: true
        mcp_server: "filesystem"
      - name: extract_features
        description: "Identify key features"
        required: true
      - name: generate_badges
        description: "Create status badges"
        required: false
      - name: add_examples
        description: "Include usage examples"
        required: true
        mcp_server: "context7"
    sections:
      - title
      - badges
      - description
      - features
      - installation
      - usage
      - api_reference
      - contributing
      - license
      
  api-documentation:
    description: "API documentation generation"
    trigger: "on_api_doc_generation"
    priority: 1
    actions:
      - name: extract_endpoints
        description: "Find all API endpoints"
        required: true
      - name: document_parameters
        description: "Document request params"
        required: true
      - name: document_responses
        description: "Document responses"
        required: true
      - name: add_examples
        description: "Add code examples"
        required: true
        mcp_server: "context7"
      - name: generate_openapi
        description: "Create OpenAPI spec"
        required: false
    components:
      - endpoints
      - authentication
      - request_formats
      - response_formats
      - error_codes
      - rate_limiting
      - examples
      
  code-comments:
    description: "Code documentation standards"
    trigger: "on_code_documentation"
    priority: 2
    actions:
      - name: add_function_docs
        description: "Document functions"
        required: true
      - name: add_class_docs
        description: "Document classes"
        required: true
      - name: explain_complex_logic
        description: "Document complex code"
        required: true
      - name: add_type_hints
        description: "Add type information"
        required: false
    standards:
      javascript: "jsdoc"
      python: "google"
      go: "godoc"
      typescript: "tsdoc"
      
  changelog-format:
    description: "Changelog management"
    trigger: "on_changelog_update"
    priority: 2
    actions:
      - name: collect_changes
        description: "Gather all changes"
        required: true
      - name: categorize_changes
        description: "Group by type"
        required: true
      - name: follow_semver
        description: "Apply semantic versioning"
        required: true
      - name: generate_notes
        description: "Create release notes"
        required: true
    categories:
      - added
      - changed
      - deprecated
      - removed
      - fixed
      - security
      
  documentation-quality:
    description: "Quality assurance for docs"
    trigger: "on_doc_completion"
    priority: 3
    actions:
      - name: check_completeness
        description: "Verify all sections present"
        required: true
      - name: validate_examples
        description: "Test code examples"
        required: true
        mcp_server: "context7"
      - name: check_links
        description: "Verify all links work"
        required: true
      - name: check_grammar
        description: "Grammar and spelling"
        required: false
      - name: check_formatting
        description: "Verify formatting"
        required: true
    metrics:
      - completeness
      - accuracy
      - readability
      - consistency
      
  markdown-best-practices:
    description: "Markdown formatting standards"
    trigger: "on_markdown_write"
    priority: 3
    actions:
      - name: format_headings
        description: "Proper heading hierarchy"
        required: true
      - name: format_code_blocks
        description: "Code block formatting"
        required: true
      - name: format_links
        description: "Link formatting"
        required: true
      - name: format_tables
        description: "Table structure"
        required: false
      - name: generate_toc
        description: "Table of contents"
        required: false
    rules:
      - heading_hierarchy
      - line_length_limit
      - blank_lines
      - list_formatting
      - code_fence_style
      
  diagrams-as-code:
    description: "Diagram generation from code"
    trigger: "on_diagram_request"
    priority: 3
    actions:
      - name: select_tool
        description: "Choose diagram tool"
        required: true
      - name: generate_syntax
        description: "Create diagram code"
        required: true
      - name: render_diagram
        description: "Generate visual"
        required: false
      - name: embed_in_docs
        description: "Include in documentation"
        required: true
    tools:
      - mermaid
      - plantuml
      - graphviz
      - ascii
      
# Integration points with other agents
integrations:
  maker-agent:
    - trigger: "after_code_creation"
      action: "document_new_code"
      
  plan-agent:
    - trigger: "after_architecture_design"
      action: "create_architecture_docs"
      
  test-agent:
    - trigger: "after_test_completion"
      action: "generate_test_report"
      
  security-agent:
    - trigger: "after_security_scan"
      action: "create_security_docs"
      
  debug-agent:
    - trigger: "after_issue_resolution"
      action: "update_troubleshooting"
      
  reader-agent:
    - trigger: "before_doc_generation"
      action: "analyze_existing_docs"
      
# Documentation standards
standards:
  writing_style:
    voice: "active"
    person: "second"
    tense: "present"
    tone: "professional"
    
  formatting:
    max_line_length: 80
    indent_size: 2
    list_marker: "-"
    heading_style: "atx"
    
  code_examples:
    include_imports: true
    show_output: true
    error_handling: true
    real_world: true
    
# Quality gates
quality_gates:
  completeness:
    - check: "all_sections_present"
      threshold: 1.0
    - check: "examples_provided"
      threshold: 0.8
      
  accuracy:
    - check: "examples_tested"
      threshold: 1.0
    - check: "links_valid"
      threshold: 1.0
      
  readability:
    - check: "grade_level"
      threshold: 10
    - check: "sentence_length"
      threshold: 25
      
# Output configuration
output:
  formats:
    markdown:
      enabled: true
      flavor: "github"
      
    html:
      enabled: true
      template: "default"
      
    pdf:
      enabled: false
      engine: "pandoc"
      
  organization:
    by_type: true
    by_module: true
    single_file: false