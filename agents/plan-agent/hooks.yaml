# Plan Agent Hook Mappings
# Defines integration points for the planning and architecture agent

version: "1.0"
agent: plan-agent

hooks:
  planning-methodology:
    description: "Selects and applies appropriate planning methodology"
    trigger: "on_planning_request"
    priority: 1
    actions:
      - name: analyze_context
        description: "Analyze project context and constraints"
        required: true
      - name: select_methodology
        description: "Choose between agile, waterfall, or hybrid"
        required: true
      - name: define_milestones
        description: "Create project milestones"
        required: true
      - name: setup_tracking
        description: "Initialize progress tracking"
        required: false
    config:
      methodologies: ["agile", "waterfall", "hybrid", "lean"]
      default: "agile"
      sprint_lengths: [7, 14, 21]
      
  architecture-patterns:
    description: "Evaluates and selects architectural patterns"
    trigger: "on_design_phase"
    priority: 1
    actions:
      - name: analyze_requirements
        description: "Map requirements to architectural needs"
        required: true
      - name: evaluate_patterns
        description: "Assess applicable patterns"
        required: true
        mcp_server: "context7"
      - name: select_architecture
        description: "Choose optimal architecture"
        required: true
        mcp_server: "sequentialthinking"
      - name: document_decisions
        description: "Create ADRs"
        required: true
    patterns:
      - microservices
      - monolithic
      - serverless
      - event-driven
      - layered
      - hexagonal
      
  requirements-analysis:
    description: "Processes and validates requirements"
    trigger: "on_requirements_input"
    priority: 2
    actions:
      - name: parse_requirements
        description: "Extract and categorize requirements"
        required: true
      - name: identify_gaps
        description: "Find missing or unclear requirements"
        required: true
        mcp_server: "sequentialthinking"
      - name: request_clarification
        description: "Generate clarification questions"
        required: false
      - name: validate_completeness
        description: "Ensure all aspects covered"
        required: true
    templates:
      - user_story
      - use_case
      - functional_spec
      - acceptance_criteria
      
  documentation-templates:
    description: "Manages documentation generation and templates"
    trigger: "on_document_generation"
    priority: 3
    actions:
      - name: select_template
        description: "Choose appropriate template"
        required: true
      - name: gather_content
        description: "Collect information to document"
        required: true
      - name: populate_template
        description: "Fill template with content"
        required: true
      - name: validate_completeness
        description: "Check documentation coverage"
        required: true
    templates:
      - adr
      - technical_spec
      - api_contract
      - deployment_guide
      - architecture_overview
      
  risk-assessment:
    description: "Identifies and analyzes project risks"
    trigger: "on_risk_evaluation"
    priority: 1
    actions:
      - name: identify_risks
        description: "Discover potential risks"
        required: true
        mcp_server: "sequentialthinking"
      - name: assess_severity
        description: "Evaluate risk impact and probability"
        required: true
      - name: plan_mitigation
        description: "Create mitigation strategies"
        required: true
      - name: define_contingencies
        description: "Plan fallback approaches"
        required: false
      - name: schedule_reviews
        description: "Set up risk review cadence"
        required: false
    risk_categories:
      - technical
      - schedule
      - resource
      - security
      - compliance
      - performance
      
# Integration points with other agents
integrations:
  maker-agent:
    - trigger: "on_implementation_plan_complete"
      action: "provide_task_breakdown"
      
  security-agent:
    - trigger: "on_architecture_defined"
      action: "request_security_review"
      
  test-agent:
    - trigger: "on_requirements_complete"
      action: "provide_test_strategy"
      
  docs-agent:
    - trigger: "on_architecture_finalized"
      action: "request_documentation"
      
# Quality gates
quality_gates:
  pre_planning:
    - check: "requirements_gathered"
      threshold: 0.95
    - check: "stakeholders_identified"
      threshold: 1.0
      
  post_planning:
    - check: "tasks_defined"
      threshold: 1.0
    - check: "risks_identified"
      threshold: 0.9
    - check: "documentation_complete"
      threshold: 0.95