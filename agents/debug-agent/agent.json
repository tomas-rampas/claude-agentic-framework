{
  "agent_id": "debug-agent",
  "version": "2.0",
  "description": "Systematic debugging and error resolution specialist with MCP-first approach",

  "tool_preferences": {
    "priority_order": [
      "mcp__sequential-thinking__sequentialthinking_tools",
      "mcp__filesystem__read_text_file",
      "mcp__filesystem__read_multiple_files",
      "mcp__filesystem__search_files",
      "mcp__serena__find_symbol",
      "mcp__serena__find_referencing_symbols",
      "mcp__filesystem__write_file",
      "mcp__filesystem__edit_file",
      "Write",
      "Edit",
      "Grep",
      "Glob",
      "TodoWrite"
    ],
    "forbidden_tools": [],
    "restricted_tools": {
      "Bash": {
        "allowed_commands": ["git log", "git diff", "git blame", "npm run", "yarn run", "ps", "netstat", "lsof", "tail -f"],
        "forbidden_commands": ["cat", "head", "tail", "less", "more", "grep", "find", "locate", "awk", "sed"],
        "restriction_reason": "Use filesystem MCP for file operations, serena MCP for code analysis",
        "fallback_suggestions": {
          "cat": "mcp__filesystem__read_text_file",
          "head": "mcp__filesystem__read_text_file with head parameter",
          "tail": "mcp__filesystem__read_text_file with tail parameter",
          "find": "mcp__filesystem__search_files or Glob", 
          "grep": "mcp__filesystem__search_files or Grep",
          "less": "mcp__filesystem__read_text_file with pagination"
        }
      }
    }
  },

  "mcp_usage": {
    "sequentialthinking": {
      "enabled": true,
      "priority": "primary",
      "auto_activate": true,
      "use_cases": [
        "Complex debugging scenarios with multiple error sources",
        "Systematic root cause analysis",
        "Multi-step debugging strategy planning",
        "Performance issue investigation",
        "Integration problem diagnosis"
      ],
      "preferred_tools": {
        "systematic_analysis": "mcp__sequential-thinking__sequentialthinking_tools"
      }
    },
    "filesystem": {
      "enabled": true,
      "priority": "primary",
      "auto_activate": true,
      "use_cases": [
        "Reading log files and error outputs",
        "Analyzing configuration files",
        "Examining stack traces in files",
        "Reading source code for error analysis",
        "Large log file processing"
      ],
      "preferred_tools": {
        "log_analysis": "mcp__filesystem__read_text_file",
        "multi_file_debugging": "mcp__filesystem__read_multiple_files",
        "error_pattern_search": "mcp__filesystem__search_files"
      }
    },
    "serena": {
      "enabled": true,
      "priority": "primary", 
      "auto_activate": true,
      "use_cases": [
        "Tracing function calls and references",
        "Understanding code flow for debugging",
        "Finding all usages of problematic symbols",
        "Code structure analysis for error context"
      ],
      "preferred_tools": {
        "symbol_tracing": "mcp__serena__find_referencing_symbols",
        "code_flow_analysis": "mcp__serena__find_symbol",
        "reference_tracking": "mcp__serena__find_referencing_symbols"
      }
    }
  },

  "workflow_rules": {
    "debugging_approach": {
      "rule": "Use sequential thinking MCP for systematic multi-step debugging",
      "enforcement": "preferred",
      "activation_threshold": "Problems with >2 interconnected components"
    },
    "file_operations": {
      "rule": "ALWAYS use filesystem MCP for log analysis and file reading",
      "enforcement": "strict",
      "exceptions": "none"
    },
    "code_analysis": {
      "rule": "Use serena MCP for symbol tracing and code flow analysis", 
      "enforcement": "strict",
      "exceptions": "Simple text searches may use Grep as fallback"
    },
    "bash_usage": {
      "rule": "ALLOWED for system debugging commands - FORBIDDEN for file operations",
      "enforcement": "strict",
      "allowed_scenarios": ["git operations", "process monitoring", "network debugging", "system diagnostics"]
    }
  },

  "debugging_methodology": {
    "systematic_approach": "Use sequential thinking for complex multi-component issues",
    "root_cause_focus": "Trace issues to their fundamental causes using symbol analysis",
    "evidence_based": "Gather evidence through filesystem MCP file analysis",
    "hypothesis_driven": "Form and test hypotheses using available MCP tools"
  },

  "quality_standards": {
    "comprehensive_analysis": "Use all available MCP tools for thorough debugging",
    "systematic_investigation": "Follow logical debugging steps with sequential thinking",
    "evidence_preservation": "Document findings using proper file operations",
    "solution_validation": "Verify fixes address root causes, not just symptoms"
  },

  "error_handling": {
    "mcp_unavailable": {
      "sequentialthinking": "Fall back to structured manual analysis, document limitation",
      "filesystem": "Fall back to Read tool, warn about limited large file capabilities",
      "serena": "Fall back to Grep for symbol search, warn about reduced precision"
    },
    "complex_issues": "Always attempt sequential thinking approach first",
    "tool_limitations": "Clearly communicate when MCP tools would provide better analysis"
  },

  "performance_optimization": {
    "large_logs": "Use mcp__filesystem__read_text_file with tail parameter for recent entries",
    "multi_file_analysis": "Use mcp__filesystem__read_multiple_files for related file debugging",
    "symbol_investigation": "Use serena MCP for precise symbol-based debugging",
    "systematic_planning": "Use sequential thinking for complex debugging strategy"
  },

  "debugging_patterns": {
    "error_categories": [
      "Compilation/build errors -> filesystem + serena analysis",
      "Runtime errors -> log analysis + symbol tracing", 
      "Performance issues -> systematic analysis + profiling",
      "Integration problems -> multi-file analysis + sequential thinking"
    ],
    "investigation_tools": {
      "logs": "mcp__filesystem__read_text_file",
      "code_flow": "mcp__serena__find_symbol", 
      "references": "mcp__serena__find_referencing_symbols",
      "complex_analysis": "mcp__sequential-thinking__sequentialthinking_tools"
    }
  }
}